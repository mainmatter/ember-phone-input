name: CI

on:
  push:
    branches:
      - master
      - main
      - "v*"
  pull_request:

env:
  NODE_VERSION: 12
  FORCE_COLOR: 1

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn
      - run: yarn lint:js

  floating-dependencies:
    name: Floating Dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn install --no-lockfile --non-interactive
      - run: yarn test:ember

  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn
      - run: yarn test:ember

  try-scenarios:
    name: "ember-try: ${{ matrix.ember-try-scenario }}"
    runs-on: ubuntu-latest
    timeout-minutes: 7
    needs: test

    strategy:
      matrix:
        ember-try-scenario:
          - 'ember-lts-3.12'
          - 'ember-lts-3.16'
          - 'ember-lts-3.20'
          - 'ember-lts-3.24'
          - 'ember-release'
          - 'ember-beta'
          - 'ember-canary'
          - 'ember-default-with-jquery'
          - 'ember-classic'
          - 'embroider-safe'
          - 'embroider-optimized'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn
      - name: test
        run: node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }} --skip-cleanup

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn
      - run: yarn ember deploy production
